# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def removeNthFromEnd(self, head: Optional[ListNode], n: int) -> Optional[ListNode]:
        if head == None or head.next == None:
            return head.next
        prev = None
        slow = head
        fast = head
        
        
        i = n-1
        while(i != 0 and fast.next != None):
            fast = fast.next
            i -= 1
        while(fast.next != None):
            prev = slow
            slow = slow.next
            fast = fast.next
        
        if slow != head:
            prev.next = slow.next
            slow.next = None
        else:
            head = slow.next
        
        return head
        
        
